<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mappers.TRentoutMapper">
    <resultMap id="BaseResultMap" type="com.bean.TRentout">
        <id column="rg_id" jdbcType="INTEGER" property="rgId"/>
        <result column="rg_name" jdbcType="VARCHAR" property="rgName"/>
        <result column="rg_phone" jdbcType="VARCHAR" property="rgPhone"/>
        <result column="room_address" jdbcType="VARCHAR" property="roomAddress"/>
        <result column="room_price" jdbcType="DOUBLE" property="roomPrice"/>
        <result column="is_floor" jdbcType="INTEGER" property="isFloor"/>
        <result column="all_floor" jdbcType="INTEGER" property="allFloor"/>
        <result column="room_age" jdbcType="INTEGER" property="roomAge"/>
        <result column="room_structure" jdbcType="VARCHAR" property="roomStructure"/>
        <result column="room_desc" jdbcType="VARCHAR" property="roomDesc"/>
        <result column="room_area" jdbcType="INTEGER" property="roomArea"/>
        <result column="renovationint" jdbcType="INTEGER" property="renovationint"/>
        <result column="room_picture" jdbcType="VARCHAR" property="roomPicture"/>
        <result column="out_status" jdbcType="INTEGER" property="outStatus"/>
        <result column="out_create_time" jdbcType="TIMESTAMP" property="outCreateTime"/>
        <result column="isqualified" jdbcType="INTEGER" property="isqualified"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <association property="user" javaType="com.bean.TUser">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <result column="username" jdbcType="VARCHAR" property="username"/>
            <result column="password" jdbcType="VARCHAR" property="password"/>
            <result column="name" jdbcType="VARCHAR" property="name"/>
            <result column="phone" jdbcType="VARCHAR" property="phone"/>
            <result column="sex" jdbcType="INTEGER" property="sex"/>
            <result column="age" jdbcType="INTEGER" property="age"/>
            <result column="idcard" jdbcType="VARCHAR" property="idcard"/>
            <result column="hard_icon" jdbcType="VARCHAR" property="hardIcon"/>
            <result column="address" jdbcType="VARCHAR" property="address"/>
            <result column="job" jdbcType="VARCHAR" property="job"/>
            <result column="is_owner" jdbcType="INTEGER" property="isOwner"/>
            <result column="status" jdbcType="INTEGER" property="status"/>
            <result column="lastlogin" jdbcType="TIMESTAMP" property="lastlogin"/>
            <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        rg_id, rg_name, rg_phone, room_address, room_price, is_floor, all_floor, room_age,
        room_structure, room_desc, room_area, renovationint, room_picture, out_status, out_create_time,
        isqualified, user_id
    </sql>
    <select id="selectByExample" parameterType="com.bean.TRentoutExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_rentout
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_rentout
        where rg_id = #{rgId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from t_rentout
        where rg_id = #{rgId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.bean.TRentoutExample">
        delete from t_rentout
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.bean.TRentout">
        insert into t_rentout (rg_id, rg_name, rg_phone,
        room_address, room_price, is_floor,
        all_floor, room_age, room_structure,
        room_desc, room_area, renovationint,
        room_picture, out_status, out_create_time,
        isqualified, user_id)
        values (#{rgId,jdbcType=INTEGER}, #{rgName,jdbcType=VARCHAR}, #{rgPhone,jdbcType=VARCHAR},
        #{roomAddress,jdbcType=VARCHAR}, #{roomPrice,jdbcType=DOUBLE}, #{isFloor,jdbcType=INTEGER},
        #{allFloor,jdbcType=INTEGER}, #{roomAge,jdbcType=INTEGER}, #{roomStructure,jdbcType=VARCHAR},
        #{roomDesc,jdbcType=VARCHAR}, #{roomArea,jdbcType=INTEGER}, #{renovationint,jdbcType=INTEGER},
        #{roomPicture,jdbcType=VARCHAR}, #{outStatus,jdbcType=INTEGER}, #{outCreateTime,jdbcType=TIMESTAMP},
        #{isqualified,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.bean.TRentout">
        insert into t_rentout
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="rgId != null">
                rg_id,
            </if>
            <if test="rgName != null">
                rg_name,
            </if>
            <if test="rgPhone != null">
                rg_phone,
            </if>
            <if test="roomAddress != null">
                room_address,
            </if>
            <if test="roomPrice != null">
                room_price,
            </if>
            <if test="isFloor != null">
                is_floor,
            </if>
            <if test="allFloor != null">
                all_floor,
            </if>
            <if test="roomAge != null">
                room_age,
            </if>
            <if test="roomStructure != null">
                room_structure,
            </if>
            <if test="roomDesc != null">
                room_desc,
            </if>
            <if test="roomArea != null">
                room_area,
            </if>
            <if test="renovationint != null">
                renovationint,
            </if>
            <if test="roomPicture != null">
                room_picture,
            </if>
            <if test="outStatus != null">
                out_status,
            </if>
            <if test="outCreateTime != null">
                out_create_time,
            </if>
            <if test="isqualified != null">
                isqualified,
            </if>
            <if test="userId != null">
                user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="rgId != null">
                #{rgId,jdbcType=INTEGER},
            </if>
            <if test="rgName != null">
                #{rgName,jdbcType=VARCHAR},
            </if>
            <if test="rgPhone != null">
                #{rgPhone,jdbcType=VARCHAR},
            </if>
            <if test="roomAddress != null">
                #{roomAddress,jdbcType=VARCHAR},
            </if>
            <if test="roomPrice != null">
                #{roomPrice,jdbcType=DOUBLE},
            </if>
            <if test="isFloor != null">
                #{isFloor,jdbcType=INTEGER},
            </if>
            <if test="allFloor != null">
                #{allFloor,jdbcType=INTEGER},
            </if>
            <if test="roomAge != null">
                #{roomAge,jdbcType=INTEGER},
            </if>
            <if test="roomStructure != null">
                #{roomStructure,jdbcType=VARCHAR},
            </if>
            <if test="roomDesc != null">
                #{roomDesc,jdbcType=VARCHAR},
            </if>
            <if test="roomArea != null">
                #{roomArea,jdbcType=INTEGER},
            </if>
            <if test="renovationint != null">
                #{renovationint,jdbcType=INTEGER},
            </if>
            <if test="roomPicture != null">
                #{roomPicture,jdbcType=VARCHAR},
            </if>
            <if test="outStatus != null">
                #{outStatus,jdbcType=INTEGER},
            </if>
            <if test="outCreateTime != null">
                #{outCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isqualified != null">
                #{isqualified,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bean.TRentoutExample" resultType="java.lang.Long">
        select count(*) from t_rentout
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_rentout
        <set>
            <if test="record.rgId != null">
                rg_id = #{record.rgId,jdbcType=INTEGER},
            </if>
            <if test="record.rgName != null">
                rg_name = #{record.rgName,jdbcType=VARCHAR},
            </if>
            <if test="record.rgPhone != null">
                rg_phone = #{record.rgPhone,jdbcType=VARCHAR},
            </if>
            <if test="record.roomAddress != null">
                room_address = #{record.roomAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.roomPrice != null">
                room_price = #{record.roomPrice,jdbcType=DOUBLE},
            </if>
            <if test="record.isFloor != null">
                is_floor = #{record.isFloor,jdbcType=INTEGER},
            </if>
            <if test="record.allFloor != null">
                all_floor = #{record.allFloor,jdbcType=INTEGER},
            </if>
            <if test="record.roomAge != null">
                room_age = #{record.roomAge,jdbcType=INTEGER},
            </if>
            <if test="record.roomStructure != null">
                room_structure = #{record.roomStructure,jdbcType=VARCHAR},
            </if>
            <if test="record.roomDesc != null">
                room_desc = #{record.roomDesc,jdbcType=VARCHAR},
            </if>
            <if test="record.roomArea != null">
                room_area = #{record.roomArea,jdbcType=INTEGER},
            </if>
            <if test="record.renovationint != null">
                renovationint = #{record.renovationint,jdbcType=INTEGER},
            </if>
            <if test="record.roomPicture != null">
                room_picture = #{record.roomPicture,jdbcType=VARCHAR},
            </if>
            <if test="record.outStatus != null">
                out_status = #{record.outStatus,jdbcType=INTEGER},
            </if>
            <if test="record.outCreateTime != null">
                out_create_time = #{record.outCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isqualified != null">
                isqualified = #{record.isqualified,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_rentout
        set rg_id = #{record.rgId,jdbcType=INTEGER},
        rg_name = #{record.rgName,jdbcType=VARCHAR},
        rg_phone = #{record.rgPhone,jdbcType=VARCHAR},
        room_address = #{record.roomAddress,jdbcType=VARCHAR},
        room_price = #{record.roomPrice,jdbcType=DOUBLE},
        is_floor = #{record.isFloor,jdbcType=INTEGER},
        all_floor = #{record.allFloor,jdbcType=INTEGER},
        room_age = #{record.roomAge,jdbcType=INTEGER},
        room_structure = #{record.roomStructure,jdbcType=VARCHAR},
        room_desc = #{record.roomDesc,jdbcType=VARCHAR},
        room_area = #{record.roomArea,jdbcType=INTEGER},
        renovationint = #{record.renovationint,jdbcType=INTEGER},
        room_picture = #{record.roomPicture,jdbcType=VARCHAR},
        out_status = #{record.outStatus,jdbcType=INTEGER},
        out_create_time = #{record.outCreateTime,jdbcType=TIMESTAMP},
        isqualified = #{record.isqualified,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bean.TRentout">
        update t_rentout
        <set>
            <if test="rgName != null">
                rg_name = #{rgName,jdbcType=VARCHAR},
            </if>
            <if test="rgPhone != null">
                rg_phone = #{rgPhone,jdbcType=VARCHAR},
            </if>
            <if test="roomAddress != null">
                room_address = #{roomAddress,jdbcType=VARCHAR},
            </if>
            <if test="roomPrice != null">
                room_price = #{roomPrice,jdbcType=DOUBLE},
            </if>
            <if test="isFloor != null">
                is_floor = #{isFloor,jdbcType=INTEGER},
            </if>
            <if test="allFloor != null">
                all_floor = #{allFloor,jdbcType=INTEGER},
            </if>
            <if test="roomAge != null">
                room_age = #{roomAge,jdbcType=INTEGER},
            </if>
            <if test="roomStructure != null">
                room_structure = #{roomStructure,jdbcType=VARCHAR},
            </if>
            <if test="roomDesc != null">
                room_desc = #{roomDesc,jdbcType=VARCHAR},
            </if>
            <if test="roomArea != null">
                room_area = #{roomArea,jdbcType=INTEGER},
            </if>
            <if test="renovationint != null">
                renovationint = #{renovationint,jdbcType=INTEGER},
            </if>
            <if test="roomPicture != null">
                room_picture = #{roomPicture,jdbcType=VARCHAR},
            </if>
            <if test="outStatus != null">
                out_status = #{outStatus,jdbcType=INTEGER},
            </if>
            <if test="outCreateTime != null">
                out_create_time = #{outCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isqualified != null">
                isqualified = #{isqualified,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
        </set>
        where rg_id = #{rgId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bean.TRentout">
        update t_rentout
        set rg_name = #{rgName,jdbcType=VARCHAR},
        rg_phone = #{rgPhone,jdbcType=VARCHAR},
        room_address = #{roomAddress,jdbcType=VARCHAR},
        room_price = #{roomPrice,jdbcType=DOUBLE},
        is_floor = #{isFloor,jdbcType=INTEGER},
        all_floor = #{allFloor,jdbcType=INTEGER},
        room_age = #{roomAge,jdbcType=INTEGER},
        room_structure = #{roomStructure,jdbcType=VARCHAR},
        room_desc = #{roomDesc,jdbcType=VARCHAR},
        room_area = #{roomArea,jdbcType=INTEGER},
        renovationint = #{renovationint,jdbcType=INTEGER},
        room_picture = #{roomPicture,jdbcType=VARCHAR},
        out_status = #{outStatus,jdbcType=INTEGER},
        out_create_time = #{outCreateTime,jdbcType=TIMESTAMP},
        isqualified = #{isqualified,jdbcType=INTEGER},
        user_id = #{userId,jdbcType=INTEGER}
        where rg_id = #{rgId,jdbcType=INTEGER}
    </update>


    <select id="selectAllByParams" resultMap="BaseResultMap"
            parameterType="Map">
        SELECT
        u.*,rg.*
        FROM
        t_rentout rg

        left join t_user u on rg.user_id=u.id

        <where>
            <if test=" param.Info!= null and  param.Info!= ''">
                AND rg.room_desc like CONCAT('%',#{param.Info,jdbcType=VARCHAR},'%')

            </if>
            <if test=" param.roomAddress!= null and  param.roomAddress!= ''">
                AND rg.room_address like CONCAT('%',#{param.roomAddress,jdbcType=VARCHAR},'%')
            </if>
            <if test=" param.rgPhone!= null and  param.rgPhone!= ''">
                AND rg.rg_phone = #{param.rgPhone,jdbcType=VARCHAR}
            </if>
            <if test=" param.userIdCard!= null and  param.userIdCard!= ''">
                AND u.idcard = #{param.userIdCard,jdbcType=VARCHAR}
            </if>
            <if test=" param.rgName !=null and param.rgName!=''">
                AND rg.rg_name = #{param.rgName,jdbcType=VARCHAR}
            </if>
            <if test=" param.isFloor !=null and param.isFloor!=''">
                AND rg.is_floor = #{param.isFloor}
            </if>
            <if test=" param.renovationint !=null and param.renovationint!=''">
                AND rg.renovationint = #{param.renovationint}
            </if>
            <if test=" param.outStatus !=null and param.outStatus!=''">
                AND rg.out_status = #{param.outStatus,jdbcType=INTEGER}
            </if>
            <if test=" param.roomAreaStart != null and param.roomAreaStart != ''">
                AND rg.room_area <![CDATA[>=]]> #{param.roomAreaStart}
            </if>
            <if test=" param.roomAreaEnd != null and param.roomAreaEnd != ''">
                AND rg.room_area <![CDATA[<=]]> #{param.roomAreaEnd}
            </if>
            <if test=" param.roomAgeStart != null and param.roomAgeStart != ''">
                AND rg.room_age <![CDATA[>=]]> #{param.roomAgeStart}
            </if>
            <if test=" param.roomAgeEnd != null and param.roomAgeEnd != ''">
                AND rg.room_age <![CDATA[<=]]> #{param.roomAgeEnd}
            </if>
            <if test=" param.PriceBegin != null and param.PriceBegin!=''">
                AND rg.room_price &gt;= #{param.PriceBegin}
            </if>
            <if test=" param.PriceEnd != null and param.PriceEnd!=''">
                AND rg.room_price &lt;= #{param.PriceEnd}
            </if>
            <if test=" param.startTime!=null and param.startTime!=''">
                <![CDATA[  AND DATE_FORMAT(rg.out_create_time, '%Y-%m-%d %T:%i:%s') >= DATE_FORMAT(#{param.startTime}, '%Y-%m-%d %T:%i:%s')   ]]>
            </if>
            <if test=" param.endTime!=null and param.endTime!=''">
                <![CDATA[  AND DATE_FORMAT(rg.out_create_time, '%Y-%m-%d %T:%i:%s') <= DATE_FORMAT(#{param.endTime}, '%Y-%m-%d %T:%i:%s')   ]]>
            </if>

        </where>

        ORDER by rg.out_create_time desc

    </select>


    <select id="selectByrgId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
        u.*,rg.*
        FROM
        t_rentout rg

        left join t_user u on rg.user_id=u.id
        where rg.rg_id = #{rgId,jdbcType=INTEGER}
    </select>


    <select id="selectBylimit" parameterType="com.bean.TRentout" resultMap="BaseResultMap">
        SELECT
        *
        FROM
        t_rentout rg
        where rg.out_status = 1 ORDER by rg.out_create_time desc limit #{offset},#{limit}
    </select>


    <!--<select id="selectByTime"  resultMap="com.bean.TimeDO">

      SELECT
          sum( CASE MONTH ( rg.out_create_time ) WHEN '1' THEN 1 ELSE 0 END ) AS '一月份',
          sum( CASE MONTH ( rg.out_create_time ) WHEN '2' THEN 1 ELSE 0 END ) AS '二月份',
          sum( CASE MONTH ( rg.out_create_time)  WHEN '3' THEN 1 ELSE 0 END ) AS '三月份',
          sum( CASE MONTH ( rg.out_create_time ) WHEN '4' THEN 1 ELSE 0 END ) AS '四月份',
          sum( CASE MONTH ( rg.out_create_time ) WHEN '5' THEN 1 ELSE 0 END ) AS '五月份',
          sum( CASE MONTH ( rg.out_create_time ) WHEN '6' THEN 1 ELSE 0 END ) AS '六月份'

      FROM
           t_rentout rg
      WHERE
          YEAR (rg.out_create_time ) = 2020;
    </select>-->


</mapper>